#####   BUSCO   #####

configfile: "config.yaml"

# rule all:
# 	input:
 		# expand("reports/BUSCO/{sample}/run_redundans_platanus/short_summary_{sample}.txt", sample=config["sample"]),
		# expand("reports/BUSCO/{sample}/run_redundans_spades/short_summary_{sample}.txt", sample=config["sample"]),
		# expand("reports/BUSCO/{sample}/run_platanus_gapclosed/short_summary_{sample}.txt", sample=config["sample"])


rule BUSCOing_redundans_platanus:
	input:
		"data/assemblies/redundans/{sample}/platanus/scaffolds.filled.fa"
	output:
		"reports/BUSCO/{sample}/run_redundans_platanus/short_summary_{sample}.txt"
	params:
		pfx="redundans_platanus",
		db="BUSCO_db/nematoda_odb9",
		mode="genome"
	shell:
		"run_BUSCO.py \
		-i {input} \
		-o {params.pfx} \
		-l {params.db} \
		-m {params.mode} -f \
		-c 14 \
		&& mv \
		run_{params.pfx}/ \
		reports/BUSCO/"

rule BUSCOing_redundans_spades:
	input:
		"data/assemblies/redundans/{sample}/spades/scaffolds.filled.fa"
	output:
		"reports/BUSCO/{sample}/run_redundans_spades/short_summary_{sample}.txt"
	params:
		pfx="redundans_spades",
		db="BUSCO_db/nematoda_odb9",
		mode="genome"
	shell:
		"run_BUSCO.py \
		-i {input} \
		-o {params.pfx} \
		-l {params.db} \
		-m {params.mode} -f \
		-c 14 \
		&& mv \
		run_{params.pfx}/ \
		reports/BUSCO/"

rule BUSCOing_platanus_gapclosed:
	input:
		"data/assemblies/platanus/gapclosed/{sample}_gapClosed.fa"
	output:
		"reports/BUSCO/{sample}/run_platanus_gapclosed/short_summary_{sample}.txt"
	params:
		pfx="platanus_gapclosed",
		db="BUSCO_db/nematoda_odb9",
		mode="genome"
	shell:
		"run_BUSCO.py \
		-i {input} \
		-o {params.pfx} \
		-l {params.db} \
		-m {params.mode} -f \
		-c 14 \
		&& mv \
		run_{params.pfx}/ \
		reports/BUSCO/"
